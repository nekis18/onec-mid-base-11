
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Начало КНВ 180323 Дополнение формы
	КН_ПриСозданииНаСервере();
	// Конец КНВ 180323
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	//Начало КНВ 26032023 ДЗ Механизм поддержки, обновление
	Отказ = КН_ПроверитьСуммуСкидокТЧ(); 
	//Конец КНВ 26032023 ДЗ Механизм поддержки, обновление 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	//РассчитатьСуммуСтроки(ТекущиеДанные); //КНВ 26032023 ДЗ Механизм поддержки, обновление               
	
	//Начало КНВ 26032023 ДЗ Механизм поддержки, обновление
	Отказ = КН_ПроверитьСуммуСкидокСтрокиТЧ(ТекущиеДанные);
	Если НЕ Отказ Тогда
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЕсли;
	//Конец КНВ 26032023 ДЗ Механизм поддержки, обновление 
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	//РассчитатьСуммуСтроки(ТекущиеДанные); //КНВ 26032023 ДЗ Механизм поддержки, обновление               
	
	//Начало КНВ 26032023 ДЗ Механизм поддержки, обновление
	Отказ = КН_ПроверитьСуммуСкидокСтрокиТЧ(ТекущиеДанные);
	Если НЕ Отказ Тогда
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЕсли;
	//Конец КНВ 26032023 ДЗ Механизм поддержки, обновление

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;//Начало КНВ 26032023 ДЗ Механизм поддержки, обновление
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;//Начало КНВ 26032023 ДЗ Механизм поддержки, обновление
	
	//Начало КНВ 26032023 ДЗ Механизм поддержки, обновление 
	КоэффициентСкидки = ТекущиеДанные.Скидка;
	ЦенаСтроки = ТекущиеДанные.Цена;
	КоличествоСтроки = ТекущиеДанные.Количество;
	ТекущиеДанные.Сумма = КН_СуммуВСтрокеНаСервере(ЦенаСтроки, КоличествоСтроки, КоэффициентСкидки);
	//Конец КНВ 26032023 ДЗ Механизм поддержки, обновление 
	
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти  

#Область КН_СлужебныеПроцедурыИФункции
&НаСервере
Процедура КН_ПриСозданииНаСервере()
	//ГруппаШапкаПраво  
	
	//Перем ЭлементКН_КонтактноеЛицо;
	//ЭтотОбъект = КН_СоздатьПолеКонтактноеЛицоКонтагента(ЭтотОбъект);
	//Элементы.Переместить(ЭлементКН_КонтактноеЛицо,Элементы.ГруппаШапкаПраво,);
	////ЭлементКН_КонтактноеЛицо = Элементы.Вставить("КН_КонтактноеЛицо", Тип("ПолеФормы"),
	//ЭтаФорма,Элементы.СуммаДокумента);
	
	ЭлементКН_КонтактноеЛицо = Элементы.Добавить("КН_КонтактноеЛицо", Тип("ПолеФормы"),
	Элементы.ГруппаШапкаПраво);
	ЭлементКН_КонтактноеЛицо.ПутьКДанным = "Объект.КН_КонтактноеЛицо";
	ЭлементКН_КонтактноеЛицо.Вид = ВидПоляФормы.ПолеВвода; 
	//ГруппаШапкаЛево
	ЭлементКН_ГруппаСогласованнаяСкидка = Элементы.Добавить("КН_ГруппаСогласованнаяСкидка",Тип("ГруппаФормы"),
	Элементы.ГруппаШапкаЛево);
	ЭлементКН_ГруппаСогласованнаяСкидка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементКН_ГруппаСогласованнаяСкидка.ОтображатьЗаголовок = Ложь;
	//ГруппаШапкаЛево
	ЭлементКН_СогласованнаяСкидка = Элементы.Добавить("КН_СогласованнаяСкидка",Тип("ПолеФормы"),
	ЭлементКН_ГруппаСогласованнаяСкидка);
	ЭлементКН_СогласованнаяСкидка.ПутьКДанным = "Объект.КН_СогласованнаяСкидка";
	ЭлементКН_СогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементКН_СогласованнаяСкидка.УстановитьДействие("ПриИзменении","КН_СогласованнаяСкидкаПриИзменении");
	ЭлементКН_СогласованнаяСкидка.МаксимальноеЗначение = 100;
	ЭлементКН_СогласованнаяСкидка.КнопкаВыбора = Ложь;
	ЭлементКН_СогласованнаяСкидка.ФорматРедактирования = "ЧФ='Ч %'";
	ЭлементКН_СогласованнаяСкидка.Подсказка = "Согласованная скидка
	|Максимальное допустимое значение в поле: 100";
	//
	КомандаКН_ПересчитатьТаблицы = Команды.Добавить("ПересчитатьТаблицы");
	КомандаКН_ПересчитатьТаблицы.Заголовок = "Пересчитать таблицы";
	КомандаКН_ПересчитатьТаблицы.Действие = "КН_КомандаПересчитатьТаблицы";
	//
	КнопкаКН_ПересчитатьТаблицы = Элементы.Добавить("КНКнопкаПересчитатьТаблицы",Тип("КнопкаФормы"),
	ЭлементКН_ГруппаСогласованнаяСкидка);
	КнопкаКН_ПересчитатьТаблицы.ИмяКоманды = "ПересчитатьТаблицы";
	КнопкаКН_ПересчитатьТаблицы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаКН_ПересчитатьТаблицы.РастягиватьПоГоризонтали = Истина; 
	КнопкаКН_ПересчитатьТаблицы.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КнопкаКН_ПересчитатьТаблицы.Картинка = БиблиотекаКартинок.Обновить;
КонецПроцедуры  

&НаКлиенте
Процедура КН_КомандаПересчитатьТаблицы (Команда)
	Отказ = КН_ПроверитьСуммуСкидокТЧ();
	Если НЕ Отказ Тогда
		КН_ПересчитатьТаблицуНаСервере();
		РассчитатьСуммуДокумента();
	КонецЕсли
КонецПроцедуры

&НаСервере
Процедура КН_ПересчитатьТаблицуНаСервере()
	//Пересчет тч товаров
	ТЧТовары = Объект.Товары.Выгрузить();
	Для Каждого СтрокаТЧ Из ТЧТовары Цикл 
		ЦенаСтроки = СтрокаТЧ.Цена;
		КоличествоСтроки = СтрокаТЧ.Количество;
		КоэффициентСкидки = СтрокаТЧ.Скидка;
		//Колонка суммы	
		СтрокаТЧ.Сумма = КН_СуммуВСтрокеНаСервере(ЦенаСтроки, КоличествоСтроки, КоэффициентСкидки);
	КонецЦикла;
	Объект.Товары.Загрузить(ТЧТовары);
	
	//Пересчет тч услуги
	ТЧУслуги = Объект.Услуги.Выгрузить();
	Для Каждого СтрокаТЧ Из ТЧУслуги Цикл ;
		ЦенаСтроки = СтрокаТЧ.Цена;
		КоличествоСтроки = СтрокаТЧ.Количество;
		КоэффициентСкидки = СтрокаТЧ.Скидка;
		//Колонка суммы	 
		СтрокаТЧ.Сумма = КН_СуммуВСтрокеНаСервере(ЦенаСтроки, КоличествоСтроки, КоэффициентСкидки);
	КонецЦикла;
	Объект.Услуги.Загрузить(ТЧУслуги);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура КН_ВопросПересчитатьТЧ(Элемент)
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Ждать ВопросАсинх("Вы изменили значение скидки. Пересчитать таблицы товаров и услуг?", Режим);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЕстьПревышения = КН_ПроверитьСуммуСкидокТЧ();
		Если ЕстьПревышения Тогда 
			Возврат
		Иначе
			КН_ПересчитатьТаблицуНаСервере();
			РассчитатьСуммуДокумента();
		КонецЕсли;
	Иначе 
	КонецЕсли;
КонецПроцедуры    

&НаСервере
Функция КН_СуммуВСтрокеНаСервере(Цена, Количество, КоэффициентСкидки)
	СуммаСкидок = (1-(Объект.КН_СогласованнаяСкидка+КоэффициентСкидки)*0.01);
	СтрокаТЧСумма = (Количество * Цена)*СуммаСкидок;
	Возврат СтрокаТЧСумма
КонецФункции

&НаКлиенте
Процедура КН_СогласованнаяСкидкаПриИзменении(Элемент)
	КН_ВопросПересчитатьТЧ(Элемент);
КонецПроцедуры

//&НаКлиенте
//Процедура КН_ПересчитатьТаблицу(Команда)
//	КН_ПересчитатьТаблицуНаСервере();
//	РассчитатьСуммуДокумента();
//КонецПроцедуры

&НаКлиенте
Функция КН_ПроверитьСуммуСкидокТЧ()
	ЕстьПревышение = Ложь;
	
	Для Каждого СтрокаСкидок Из Объект.Товары Цикл 
		СуммаСкидок = СтрокаСкидок.Скидка + Объект.КН_СогласованнаяСкидка;
		Больше = (СуммаСкидок) > 100;
		Если Больше Тогда
			Сообщение = СтрШаблон("Таблица товары, строка %1: установленная скидка в сумме с согласованной скидкой равна %2 и превышаю максимальное допустимое значение: 100",
			СтрокаСкидок.НомерСтроки, СуммаСкидок);
			Сообщить(Сообщение);
			ЕстьПревышение = Истина; 
		Иначе
		КонецЕсли;
	КонецЦикла; 
	Для Каждого СтрокаСкидок Из Объект.Услуги Цикл 
		СуммаСкидок = СтрокаСкидок.Скидка + Объект.КН_СогласованнаяСкидка;
		Больше = (СуммаСкидок) > 100;
		Если Больше Тогда
			Сообщение = СтрШаблон("Таблица услуги, строка %1: установленная скидка в сумме с согласованной скидкой равна %2 и превышаю максимальное допустимое значение: 100",
			СтрокаСкидок.НомерСтроки, СуммаСкидок);
			Сообщить(Сообщение);
			ЕстьПревышение = Истина; 
		Иначе
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьПревышение
КонецФункции 

&НаКлиенте
Функция КН_ПроверитьСуммуСкидокСтрокиТЧ(ТекущиеДанные);
	ЕстьПревышение = Ложь;
	СуммаСкидок = ТекущиеДанные.Скидка + Объект.КН_СогласованнаяСкидка;
	Больше = (СуммаСкидок) > 100;
	Если Больше Тогда
		Сообщение = СтрШаблон("Установленная скидка в данной строке, в сумме с согласованной скидкой равна %2 и превышаю максимальное допустимое значение: 100",
		ТекущиеДанные.НомерСтроки, СуммаСкидок);
		Сообщить(Сообщение);
		ЕстьПревышение = Истина; 
	Иначе
	КонецЕсли;
	Возврат ЕстьПревышение
КонецФункции

#КонецОбласти

#КонецОбласти
